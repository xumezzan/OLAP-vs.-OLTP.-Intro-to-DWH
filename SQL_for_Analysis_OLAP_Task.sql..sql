-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS sh.channels
(
    channel_id integer NOT NULL,
    channel_desc character varying(20) COLLATE pg_catalog."default",
    channel_class character varying(20) COLLATE pg_catalog."default",
    channel_class_id integer,
    channel_total character varying(13) COLLATE pg_catalog."default",
    channel_total_id integer,
    CONSTRAINT channels_pk PRIMARY KEY (channel_id)
);

COMMENT ON TABLE sh.channels
    IS 'small dimension table';

COMMENT ON COLUMN sh.channels.channel_id
    IS 'primary key column';

COMMENT ON COLUMN sh.channels.channel_desc
    IS 'e.g. telesales, internet, catalog';

COMMENT ON COLUMN sh.channels.channel_class
    IS 'e.g. direct, indirect';

CREATE TABLE IF NOT EXISTS sh.costs
(
    prod_id integer,
    time_id date,
    promo_id integer,
    channel_id integer,
    unit_cost numeric(10, 2),
    unit_price numeric(10, 2)
);

CREATE TABLE IF NOT EXISTS sh.countries
(
    country_id integer NOT NULL,
    country_iso_code character(2) COLLATE pg_catalog."default",
    country_name character varying(40) COLLATE pg_catalog."default",
    country_subregion character varying(30) COLLATE pg_catalog."default",
    country_subregion_id integer,
    country_region character varying(20) COLLATE pg_catalog."default",
    country_region_id integer,
    country_total character varying(11) COLLATE pg_catalog."default",
    country_total_id integer,
    country_name_hist character varying(40) COLLATE pg_catalog."default",
    CONSTRAINT countries_pk PRIMARY KEY (country_id)
);

COMMENT ON TABLE sh.countries
    IS 'country dimension table (snowflake)';

COMMENT ON COLUMN sh.countries.country_id
    IS 'primary key';

COMMENT ON COLUMN sh.countries.country_name
    IS 'country name';

COMMENT ON COLUMN sh.countries.country_subregion
    IS 'e.g. western europe, to allow hierarchies';

COMMENT ON COLUMN sh.countries.country_region
    IS 'e.g. europe, asia';

CREATE TABLE IF NOT EXISTS sh.customers
(
    cust_id integer NOT NULL,
    cust_first_name character varying(20) COLLATE pg_catalog."default",
    cust_last_name character varying(40) COLLATE pg_catalog."default",
    cust_gender character(1) COLLATE pg_catalog."default",
    cust_year_of_birth smallint,
    cust_marital_status character varying(20) COLLATE pg_catalog."default",
    cust_street_address character varying(40) COLLATE pg_catalog."default",
    cust_postal_code character varying(10) COLLATE pg_catalog."default",
    cust_city character varying(30) COLLATE pg_catalog."default",
    cust_city_id integer,
    cust_state_province character varying(40) COLLATE pg_catalog."default",
    cust_state_province_id integer,
    country_id integer,
    cust_main_phone_number character varying(25) COLLATE pg_catalog."default",
    cust_income_level character varying(30) COLLATE pg_catalog."default",
    cust_credit_limit integer,
    cust_email character varying(30) COLLATE pg_catalog."default",
    cust_total character varying(14) COLLATE pg_catalog."default",
    cust_total_id integer,
    cust_src_id integer,
    cust_eff_from timestamp(0) without time zone,
    cust_eff_to timestamp(0) without time zone,
    cust_valid character varying(1) COLLATE pg_catalog."default",
    CONSTRAINT customers_pk PRIMARY KEY (cust_id)
);

COMMENT ON TABLE sh.customers
    IS 'dimension table';

COMMENT ON COLUMN sh.customers.cust_id
    IS 'primary key';

COMMENT ON COLUMN sh.customers.cust_first_name
    IS 'first name of the customer';

COMMENT ON COLUMN sh.customers.cust_last_name
    IS 'last name of the customer';

COMMENT ON COLUMN sh.customers.cust_gender
    IS 'gender; low cardinality attribute';

COMMENT ON COLUMN sh.customers.cust_year_of_birth
    IS 'customer year of birth';

COMMENT ON COLUMN sh.customers.cust_marital_status
    IS 'customer marital status; low cardinality attribute';

COMMENT ON COLUMN sh.customers.cust_street_address
    IS 'customer street address';

COMMENT ON COLUMN sh.customers.cust_postal_code
    IS 'postal code of the customer';

COMMENT ON COLUMN sh.customers.cust_city
    IS 'city where the customer lives';

COMMENT ON COLUMN sh.customers.cust_state_province
    IS 'customer geography: state or province';

COMMENT ON COLUMN sh.customers.country_id
    IS 'foreign key to the countries table (snowflake)';

COMMENT ON COLUMN sh.customers.cust_main_phone_number
    IS 'customer main phone number';

COMMENT ON COLUMN sh.customers.cust_income_level
    IS 'customer income level';

COMMENT ON COLUMN sh.customers.cust_credit_limit
    IS 'customer credit limit';

COMMENT ON COLUMN sh.customers.cust_email
    IS 'customer email id';

CREATE TABLE IF NOT EXISTS sh.products
(
    prod_id integer NOT NULL,
    prod_name character varying(50) COLLATE pg_catalog."default",
    prod_desc character varying(4000) COLLATE pg_catalog."default",
    prod_subcategory character varying(50) COLLATE pg_catalog."default",
    prod_subcategory_id integer,
    prod_subcategory_desc character varying(2000) COLLATE pg_catalog."default",
    prod_category character varying(50) COLLATE pg_catalog."default",
    prod_category_id integer,
    prod_category_desc character varying(2000) COLLATE pg_catalog."default",
    prod_weight_class smallint,
    prod_unit_of_measure character varying(20) COLLATE pg_catalog."default",
    prod_pack_size character varying(30) COLLATE pg_catalog."default",
    supplier_id integer,
    prod_status character varying(20) COLLATE pg_catalog."default",
    prod_list_price numeric(8, 2),
    prod_min_price numeric(8, 2),
    prod_total character varying(13) COLLATE pg_catalog."default",
    prod_total_id integer,
    prod_src_id integer,
    prod_eff_from timestamp(0) without time zone,
    prod_eff_to timestamp(0) without time zone,
    prod_valid character varying(1) COLLATE pg_catalog."default",
    CONSTRAINT products_pk PRIMARY KEY (prod_id)
);

COMMENT ON TABLE sh.products
    IS 'dimension table';

COMMENT ON COLUMN sh.products.prod_id
    IS 'primary key';

COMMENT ON COLUMN sh.products.prod_name
    IS 'product name';

COMMENT ON COLUMN sh.products.prod_desc
    IS 'product description';

COMMENT ON COLUMN sh.products.prod_subcategory
    IS 'product subcategory';

COMMENT ON COLUMN sh.products.prod_subcategory_desc
    IS 'product subcategory description';

COMMENT ON COLUMN sh.products.prod_category
    IS 'product category';

COMMENT ON COLUMN sh.products.prod_category_desc
    IS 'product category description';

COMMENT ON COLUMN sh.products.prod_weight_class
    IS 'product weight class';

COMMENT ON COLUMN sh.products.prod_unit_of_measure
    IS 'product unit of measure';

COMMENT ON COLUMN sh.products.prod_pack_size
    IS 'product package size';

COMMENT ON COLUMN sh.products.supplier_id
    IS 'this column';

COMMENT ON COLUMN sh.products.prod_status
    IS 'product status';

COMMENT ON COLUMN sh.products.prod_list_price
    IS 'product list price';

COMMENT ON COLUMN sh.products.prod_min_price
    IS 'product minimum price';

CREATE TABLE IF NOT EXISTS sh.promotions
(
    promo_id integer NOT NULL,
    promo_name character varying(30) COLLATE pg_catalog."default",
    promo_subcategory character varying(30) COLLATE pg_catalog."default",
    promo_subcategory_id integer,
    promo_category character varying(30) COLLATE pg_catalog."default",
    promo_category_id integer,
    promo_cost numeric(10, 2),
    promo_begin_date timestamp(0) without time zone,
    promo_end_date timestamp(0) without time zone,
    promo_total character varying(15) COLLATE pg_catalog."default",
    promo_total_id integer,
    CONSTRAINT promo_pk PRIMARY KEY (promo_id)
);

COMMENT ON TABLE sh.promotions
    IS 'dimension table without a pk-fk relationship with the facts table, to show outer join functionality';

COMMENT ON COLUMN sh.promotions.promo_id
    IS 'primary key column';

COMMENT ON COLUMN sh.promotions.promo_name
    IS 'promotion description';

COMMENT ON COLUMN sh.promotions.promo_subcategory
    IS 'enables to investigate promotion hierarchies';

COMMENT ON COLUMN sh.promotions.promo_category
    IS 'promotion category';

COMMENT ON COLUMN sh.promotions.promo_cost
    IS 'promotion cost, to do promotion effect calculations';

COMMENT ON COLUMN sh.promotions.promo_begin_date
    IS 'promotion begin day';

COMMENT ON COLUMN sh.promotions.promo_end_date
    IS 'promotion end day';

CREATE TABLE IF NOT EXISTS sh.sales
(
    prod_id integer,
    cust_id integer,
    time_id date,
    channel_id integer,
    promo_id integer,
    quantity_sold numeric(10, 2),
    amount_sold numeric(10, 2)
);

COMMENT ON TABLE sh.sales
    IS 'facts table, without a primary key; all rows are uniquely identified by the combination of all foreign keys';

COMMENT ON COLUMN sh.sales.prod_id
    IS 'fk to the products dimension table';

COMMENT ON COLUMN sh.sales.cust_id
    IS 'fk to the customers dimension table';

COMMENT ON COLUMN sh.sales.time_id
    IS 'fk to the times dimension table';

COMMENT ON COLUMN sh.sales.channel_id
    IS 'fk to the channels dimension table';

COMMENT ON COLUMN sh.sales.promo_id
    IS 'promotion identifier, without fk constraint (intentionally) to show outer join optimization';

COMMENT ON COLUMN sh.sales.quantity_sold
    IS 'product quantity sold with the transaction';

COMMENT ON COLUMN sh.sales.amount_sold
    IS 'invoiced amount to the customer';

CREATE TABLE IF NOT EXISTS sh.supplementary_demographics
(
    cust_id integer NOT NULL,
    education character varying(21) COLLATE pg_catalog."default",
    occupation character varying(21) COLLATE pg_catalog."default",
    household_size character varying(21) COLLATE pg_catalog."default",
    yrs_residence integer,
    affinity_card bigint,
    bulk_pack_diskettes bigint,
    flat_panel_monitor bigint,
    home_theater_package bigint,
    bookkeeping_application bigint,
    printer_supplies bigint,
    y_box_games bigint,
    os_doc_set_kanji bigint,
    comments character varying(4000) COLLATE pg_catalog."default",
    CONSTRAINT supp_demo_pk PRIMARY KEY (cust_id)
);

CREATE TABLE IF NOT EXISTS sh.times
(
    time_id date NOT NULL,
    day_name character varying(9) COLLATE pg_catalog."default",
    day_number_in_week smallint,
    day_number_in_month smallint,
    calendar_week_number smallint,
    fiscal_week_number smallint,
    week_ending_day date,
    week_ending_day_id integer,
    calendar_month_number smallint,
    fiscal_month_number smallint,
    calendar_month_desc character varying(8) COLLATE pg_catalog."default",
    calendar_month_id integer,
    fiscal_month_desc character varying(8) COLLATE pg_catalog."default",
    fiscal_month_id integer,
    days_in_cal_month integer,
    days_in_fis_month integer,
    end_of_cal_month date,
    end_of_fis_month date,
    calendar_month_name character varying(9) COLLATE pg_catalog."default",
    fiscal_month_name character varying(9) COLLATE pg_catalog."default",
    calendar_quarter_desc character(7) COLLATE pg_catalog."default",
    calendar_quarter_id integer,
    fiscal_quarter_desc character(7) COLLATE pg_catalog."default",
    fiscal_quarter_id integer,
    days_in_cal_quarter integer,
    days_in_fis_quarter integer,
    end_of_cal_quarter date,
    end_of_fis_quarter date,
    calendar_quarter_number smallint,
    fiscal_quarter_number smallint,
    calendar_year smallint,
    calendar_year_id integer,
    fiscal_year smallint,
    fiscal_year_id integer,
    days_in_cal_year integer,
    days_in_fis_year integer,
    end_of_cal_year date,
    end_of_fis_year date,
    CONSTRAINT times_pk PRIMARY KEY (time_id)
);

COMMENT ON TABLE sh.times
    IS 'time dimension table to support multiple hierarchies and materialized views';

COMMENT ON COLUMN sh.times.time_id
    IS 'primary key; day date, finest granularity, correct order';

COMMENT ON COLUMN sh.times.day_name
    IS 'monday to sunday, repeating';

COMMENT ON COLUMN sh.times.day_number_in_week
    IS '1 to 7, repeating';

COMMENT ON COLUMN sh.times.day_number_in_month
    IS '1 to 31, repeating';

COMMENT ON COLUMN sh.times.calendar_week_number
    IS '1 to 53, repeating';

COMMENT ON COLUMN sh.times.fiscal_week_number
    IS '1 to 53, repeating';

COMMENT ON COLUMN sh.times.week_ending_day
    IS 'date of last day in week, correct order';

COMMENT ON COLUMN sh.times.calendar_month_number
    IS '1 to 12, repeating';

COMMENT ON COLUMN sh.times.fiscal_month_number
    IS '1 to 12, repeating';

COMMENT ON COLUMN sh.times.calendar_month_desc
    IS 'e.g. 1998-01, correct order';

COMMENT ON COLUMN sh.times.fiscal_month_desc
    IS 'e.g. 1998-01, correct order';

COMMENT ON COLUMN sh.times.days_in_cal_month
    IS 'e.g. 28,31, repeating';

COMMENT ON COLUMN sh.times.days_in_fis_month
    IS 'e.g. 25,32, repeating';

COMMENT ON COLUMN sh.times.end_of_cal_month
    IS 'last day of calendar month';

COMMENT ON COLUMN sh.times.end_of_fis_month
    IS 'last day of fiscal month';

COMMENT ON COLUMN sh.times.calendar_month_name
    IS 'january to december, repeating';

COMMENT ON COLUMN sh.times.fiscal_month_name
    IS 'january to december, repeating';

COMMENT ON COLUMN sh.times.calendar_quarter_desc
    IS 'e.g. 1998-q1, correct order';

COMMENT ON COLUMN sh.times.fiscal_quarter_desc
    IS 'e.g. 1999-q3, correct order';

COMMENT ON COLUMN sh.times.days_in_cal_quarter
    IS 'e.g. 88,90, repeating';

COMMENT ON COLUMN sh.times.days_in_fis_quarter
    IS 'e.g. 88,90, repeating';

COMMENT ON COLUMN sh.times.end_of_cal_quarter
    IS 'last day of calendar quarter';

COMMENT ON COLUMN sh.times.end_of_fis_quarter
    IS 'last day of fiscal quarter';

COMMENT ON COLUMN sh.times.calendar_quarter_number
    IS '1 to 4, repeating';

COMMENT ON COLUMN sh.times.fiscal_quarter_number
    IS '1 to 4, repeating';

COMMENT ON COLUMN sh.times.calendar_year
    IS 'e.g. 1999, correct order';

COMMENT ON COLUMN sh.times.fiscal_year
    IS 'e.g. 1999, correct order';

COMMENT ON COLUMN sh.times.days_in_cal_year
    IS '365,366 repeating';

COMMENT ON COLUMN sh.times.days_in_fis_year
    IS 'e.g. 355,364, repeating';

COMMENT ON COLUMN sh.times.end_of_cal_year
    IS 'last day of cal year';

COMMENT ON COLUMN sh.times.end_of_fis_year
    IS 'last day of fiscal year';

ALTER TABLE IF EXISTS sh.costs
    ADD CONSTRAINT costs_channel_fk FOREIGN KEY (channel_id)
    REFERENCES sh.channels (channel_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS sh.costs
    ADD CONSTRAINT costs_product_fk FOREIGN KEY (prod_id)
    REFERENCES sh.products (prod_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS sh.costs
    ADD CONSTRAINT costs_promo_fk FOREIGN KEY (promo_id)
    REFERENCES sh.promotions (promo_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS sh.costs
    ADD CONSTRAINT costs_time_fk FOREIGN KEY (time_id)
    REFERENCES sh.times (time_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS sh.customers
    ADD CONSTRAINT customers_country_fk FOREIGN KEY (country_id)
    REFERENCES sh.countries (country_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS sh.sales
    ADD CONSTRAINT sales_channel_fk FOREIGN KEY (channel_id)
    REFERENCES sh.channels (channel_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS sh.sales
    ADD CONSTRAINT sales_customer_fk FOREIGN KEY (cust_id)
    REFERENCES sh.customers (cust_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS sh.sales
    ADD CONSTRAINT sales_product_fk FOREIGN KEY (prod_id)
    REFERENCES sh.products (prod_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS sh.sales
    ADD CONSTRAINT sales_promo_fk FOREIGN KEY (promo_id)
    REFERENCES sh.promotions (promo_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS sh.sales
    ADD CONSTRAINT sales_time_fk FOREIGN KEY (time_id)
    REFERENCES sh.times (time_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;